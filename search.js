window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"panelsplit": {"fullname": "panelsplit", "modulename": "panelsplit", "kind": "module", "doc": "<h1 id=\"panelsplit-a-tool-for-panel-data-analysis\">panelsplit: A tool for panel data analysis</h1>\n\n<p>panelsplit is a Python package designed to facilitate time series cross-validation for panel (multi-entity) data. Whether you're in feature engineering, hyper-parameter tuning, or model estimation, panelsplit provides robust modules that make working with panel data both easier and more efficient.</p>\n\n<p><strong>Key Features:</strong></p>\n\n<ul>\n<li><strong>Panel data cross-validation:</strong> Split up your panel dataset, respecting its temporal structure.</li>\n<li><strong>Data compatibility:</strong> Works effortlessly with both numpy arrays and pandas DataFrames.</li>\n<li><strong>Flexible pipelines:</strong> Easily build pipelines that integrate with popular libraries such as scikit-learn and feature-engine.</li>\n<li><strong>Parallel Processing:</strong> Leverages parallel computing to speed up cross-validation and prediction tasks.</li>\n</ul>\n\n<hr />\n\n<h2 id=\"why-choose-panelsplit\">Why choose panelsplit?</h2>\n\n<p>panelsplit is built with the practical needs of data scientists working with panel data in mind:</p>\n\n<ul>\n<li><strong>Robust &amp; flexible:</strong> Whether experimenting with models or deploying production pipelines, its modular design lets you focus on analysis rather than plumbing.</li>\n<li><strong>User-friendly:</strong> Clear API design and comprehensive documentation make it easy to integrate into your existing workflows.</li>\n<li><strong>Efficient:</strong> Parallel processing and tailored cross-validation ensure that your computations are both fast and accurate.</li>\n</ul>\n\n<p>Explore the modules in detail by clicking on the links below to see full documentation and examples.</p>\n\n<hr />\n\n<h2 id=\"modules\">Modules</h2>\n\n<h3 id=\"panelsplitcross_validation\"><code>panelsplit.cross_validation</code></h3>\n\n<ul>\n<li><strong>PanelSplit class:</strong> Automatically generates train/test splits while preserving temporal order and handling edge cases.</li>\n<li><strong>Label generation:</strong> Provides helper functions to create training and testing labels.</li>\n<li><strong>Snapshot generation:</strong> Generates snapshots of data in cases where transformations aren't comparable across time.</li>\n</ul>\n\n<h3 id=\"panelsplitapplication\"><code>panelsplit.application</code></h3>\n\n<ul>\n<li><strong>Model fitting &amp; prediction:</strong> Fits models on each training split using cloned estimators and supports multiple prediction methods (e.g., <code>predict</code>, <code>predict_proba</code>).</li>\n<li><strong>Parallel execution:</strong> Leverages parallel processing for efficient handling of cross-validation splits.</li>\n<li><strong>Data integrity:</strong> Restores predictions to the original data order for consistency.</li>\n</ul>\n\n<h3 id=\"panelsplitpipeline\"><code>panelsplit.pipeline</code></h3>\n\n<ul>\n<li><strong>Sequential processing:</strong> Chains multiple transformers and estimators into a streamlined workflow.</li>\n<li><strong>Dynamic method injection:</strong> Automatically creates methods (like <code>predict</code> and <code>score</code>) based on the final estimator\u2019s capabilities.</li>\n<li><strong>Out-of-fold predictions:</strong> Supports cross-validation based predictions with reassembled outputs.</li>\n</ul>\n\n<h3 id=\"panelsplitplot\"><code>panelsplit.plot</code></h3>\n\n<ul>\n<li>Visualize time series splits easily.</li>\n</ul>\n"}, "panelsplit.application": {"fullname": "panelsplit.application", "modulename": "panelsplit.application", "kind": "module", "doc": "<p></p>\n"}, "panelsplit.application.cross_val_fit": {"fullname": "panelsplit.application.cross_val_fit", "modulename": "panelsplit.application", "qualname": "cross_val_fit", "kind": "function", "doc": "<p>Fit the estimator using cross-validation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>estimator</strong> (object):\nThe machine learning model to be fitted.</li>\n<li><strong>X</strong> (pd.DataFrame):\nThe input features for the estimator.</li>\n<li><strong>y</strong> (pd.Series):\nThe target variable for the estimator.</li>\n<li><strong>cv</strong> (object or iterable):\nCross-validation splitter; either an object that generates train/test splits (e.g., an instance of PanelSplit)\nor an iterable of splits.</li>\n<li><strong>sample_weight</strong> (pd.Series or np.ndarray, optional):\nSample weights for the training data. Default is None.</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel. Default is 1.</li>\n<li><strong>progress_bar</strong> (bool, optional):\nWhether to display a progress bar. Default is False.</li>\n<li><strong>drop_na_in_y</strong> (bool, optional):\nWhether to drop observations where y is na. Default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list</strong>: List containing fitted models for each split.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pandas</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">sklearn.linear_model</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">LinearRegression</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">panelsplit.cross_validation</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">PanelSplit</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Create sample data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;feature&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;period&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[[</span><span class=\"s1\">&#39;feature&#39;</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Create a PanelSplit instance for cross-validation</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">&#39;period&#39;</span><span class=\"p\">],</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fitted_models</span> <span class=\"o\">=</span> <span class=\"n\">cross_val_fit</span><span class=\"p\">(</span><span class=\"n\">LinearRegression</span><span class=\"p\">(),</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">ps</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fitted_models</span><span class=\"p\">)</span>\n<span class=\"go\">2</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">estimator</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span>,</span><span class=\"param\">\t<span class=\"n\">cv</span>,</span><span class=\"param\">\t<span class=\"n\">sample_weight</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">progress_bar</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">drop_na_in_y</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.application.cross_val_predict": {"fullname": "panelsplit.application.cross_val_predict", "modulename": "panelsplit.application", "qualname": "cross_val_predict", "kind": "function", "doc": "<p>Perform cross-validated predictions using a given predictor model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fitted_estimators</strong> (list):\nList of fitted machine learning models used for prediction.</li>\n<li><strong>X</strong> (pd.DataFrame):\nThe input features for prediction.</li>\n<li><strong>cv</strong> (object or iterable):\nCross-validation splitter; either an object that generates train/test splits or an iterable of splits.</li>\n<li><strong>method</strong> (str, optional):\nThe method to use for prediction. It can be whatever methods are available to the estimator\n(e.g. predict_proba in the case of a classifier or transform in the case of a transformer). Default is 'predict'.</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel. Default is 1.</li>\n<li><strong>return_train_preds</strong> (bool, optional):\nIf True, return predictions for the training set as well. Default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>test_preds</strong> (np.ndarray):\nArray containing test predictions made by the model during cross-validation.</li>\n<li><strong>train_preds</strong> (np.ndarray, optional):\nArray containing train predictions made by the model during cross-validation.\nReturned only if <code>return_train_preds</code> is True.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fitted_estimators</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">cv</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;predict&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">return_train_preds</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "panelsplit.application.cross_val_fit_predict": {"fullname": "panelsplit.application.cross_val_fit_predict", "modulename": "panelsplit.application", "qualname": "cross_val_fit_predict", "kind": "function", "doc": "<p>Fit the estimator using cross-validation and then make predictions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>estimator</strong> (object):\nThe machine learning model to be fitted.</li>\n<li><strong>X</strong> (pd.DataFrame):\nThe input features for the estimator.</li>\n<li><strong>y</strong> (pd.Series):\nThe target variable for the estimator.</li>\n<li><strong>cv</strong> (object):\nCross-validation splitter; an object that generates train/test splits.\nmethod : str, optional\n   The method to use for prediction. It can be whatever methods are available to the estimator\n   (e.g. predict_proba in the case of a classifier or transform in the case of a transformer). Default is 'predict'.</li>\n<li><strong>sample_weight</strong> (pd.Series or np.ndarray, optional):\nSample weights for the training data. Default is None.</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel. Default is 1.</li>\n<li><strong>return_train_preds</strong> (bool, optional):\nIf True, return predictions for the training set as well. Default is False.</li>\n<li><strong>drop_na_in_y</strong> (bool, optional):\nWhether to drop observations where y is na. Default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tuple</strong>: If <code>return_train_preds</code> is False, returns a tuple of:\n<ul>\n<li>preds (np.ndarray): Array containing predictions made by the model during cross-validation.</li>\n<li>fitted_estimators (list): List containing fitted models for each split.\nIf <code>return_train_preds</code> is True, returns a tuple of:</li>\n<li>preds (np.ndarray): Array containing test predictions made by the model during cross-validation.</li>\n<li>train_preds (np.ndarray): Array containing train predictions made by the model during cross-validation.</li>\n<li>fitted_estimators (list): List containing fitted models for each split.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pandas</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">sklearn.linear_model</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">LinearRegression</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">panelsplit.cross_validation</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">PanelSplit</span>  <span class=\"c1\"># assuming PanelSplit is imported from your module</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Create sample data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;feature&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;period&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[[</span><span class=\"s1\">&#39;feature&#39;</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Create a PanelSplit instance for cross-validation</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">&#39;period&#39;</span><span class=\"p\">],</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get test predictions and fitted models</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">preds</span><span class=\"p\">,</span> <span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"n\">cross_val_fit_predict</span><span class=\"p\">(</span><span class=\"n\">LinearRegression</span><span class=\"p\">(),</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">ps</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">preds</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(2,)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">estimator</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span>,</span><span class=\"param\">\t<span class=\"n\">cv</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;predict&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">sample_weight</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">return_train_preds</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">drop_na_in_y</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "panelsplit.cross_validation": {"fullname": "panelsplit.cross_validation", "modulename": "panelsplit.cross_validation", "kind": "module", "doc": "<p></p>\n"}, "panelsplit.cross_validation.PanelSplit": {"fullname": "panelsplit.cross_validation.PanelSplit", "modulename": "panelsplit.cross_validation", "qualname": "PanelSplit", "kind": "class", "doc": "<p>PanelSplit implements panel data cross-validation using time series splits.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>periods</strong> (pd.Series, pd.Index, or np.ndarray):\nA collection of periods for each observation.</li>\n<li><strong>unique_periods</strong> (array-like, optional):\nAn array-like object containing unique periods. If None, the unique periods will be\ncomputed from <code>periods</code>. Default is None.</li>\n<li><strong>snapshots</strong> (pd.Series, optional):\nA Series defining the snapshot for each observation. Default is None.</li>\n<li><strong>n_splits</strong> (int, optional):\nNumber of splits for TimeSeriesSplit. Default is 2.</li>\n<li><strong>gap</strong> (int, optional):\nGap between the training and testing sets. Default is 0.</li>\n<li><strong>test_size</strong> (int, optional):\nSize of the test set. Default is 1.</li>\n<li><strong>max_train_size</strong> (int, optional):\nMaximum size for a single training set. Default is None.</li>\n<li><strong>include_first_train_in_test</strong> (bool, optional):\nWhether to include the first split's training set in the test set. Useful in the context of transforming data. Default is False.</li>\n<li><strong>include_train_in_test</strong> (bool, optional):\nWhether to include the all splits' training sets in their respective test sets. Useful in the context of transforming data that has snapshots. Default is False. If set to True, overrides include_first_train_in_test.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>n_splits</strong> (int):\nThe number of splits for cross-validation.</li>\n<li><strong>train_test_splits</strong> (list of tuples):\nA list of train/test splits for the panel data. Each tuple has the form\n(train_indices, test_indices), representing the indices for the training and testing sets\nfor that split.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is designed for panel data where cross-validation splits must respect\ntemporal ordering.</p>\n"}, "panelsplit.cross_validation.PanelSplit.split": {"fullname": "panelsplit.cross_validation.PanelSplit.split", "modulename": "panelsplit.cross_validation", "qualname": "PanelSplit.split", "kind": "function", "doc": "<p>Generate training and testing indices for each cross-validation split.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (object, optional):\nIgnored; included for compatibility.</li>\n<li><strong>y</strong> (object, optional):\nIgnored; included for compatibility.</li>\n<li><strong>groups</strong> (object, optional):\nIgnored; included for compatibility.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of tuple of np.ndarray</strong>: A list of tuples, where each tuple contains:\n(train_indices, test_indices) as boolean arrays.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">period</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">period</span><span class=\"p\">,</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">splits</span> <span class=\"o\">=</span> <span class=\"n\">ps</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">train</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"ow\">in</span> <span class=\"n\">splits</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Train:&quot;</span><span class=\"p\">,</span> <span class=\"n\">train</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Test:&quot;</span><span class=\"p\">,</span> <span class=\"n\">test</span><span class=\"p\">)</span>\n<span class=\"go\">Train: [ True False False] Test: [False  True False]</span>\n<span class=\"go\">Train: [ True  True False] Test: [False False  True]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps_modified</span> <span class=\"o\">=</span> <span class=\"n\">drop_splits</span><span class=\"p\">(</span><span class=\"n\">ps</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">splits_modified</span> <span class=\"o\">=</span> <span class=\"n\">ps_modified</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n<span class=\"go\">Dropping split 0 as either the test or train set is either empty or contains only one unique value.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">train</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"ow\">in</span> <span class=\"n\">splits_modified</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>   <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Train:&quot;</span><span class=\"p\">,</span> <span class=\"n\">train</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Test:&quot;</span><span class=\"p\">,</span> <span class=\"n\">test</span><span class=\"p\">)</span>\n<span class=\"go\">Train: [ True  True False] Test: [False False  True]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">groups</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"fullname": "panelsplit.cross_validation.PanelSplit.get_n_splits", "modulename": "panelsplit.cross_validation", "qualname": "PanelSplit.get_n_splits", "kind": "function", "doc": "<p>Get the number of splits.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (object, optional):\nIgnored; included for compatibility.</li>\n<li><strong>y</strong> (object, optional):\nIgnored; included for compatibility.</li>\n<li><strong>groups</strong> (object, optional):\nIgnored; included for compatibility.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>int</strong>: The number of splits.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pandas</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">periods</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">periods</span><span class=\"p\">,</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span><span class=\"o\">.</span><span class=\"n\">get_n_splits</span><span class=\"p\">()</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">groups</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"fullname": "panelsplit.cross_validation.PanelSplit.gen_train_labels", "modulename": "panelsplit.cross_validation", "qualname": "PanelSplit.gen_train_labels", "kind": "function", "doc": "<p>Generate training set labels based on the provided labels.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>labels</strong> (pd.Index, pd.Series, pd.DataFrame, or np.ndarray):\nThe labels corresponding to the observations.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Same type as <code>labels</code></strong>: The labels for the training set.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pandas</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">periods</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">periods</span><span class=\"p\">,</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">train_labels</span> <span class=\"o\">=</span> <span class=\"n\">ps</span><span class=\"o\">.</span><span class=\"n\">gen_train_labels</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">train_labels</span>\n<span class=\"go\">array([&#39;a&#39;, &#39;b&#39;], dtype=&#39;&lt;U1&#39;)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">indexes</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">Index</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">indexes</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">Index</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"fullname": "panelsplit.cross_validation.PanelSplit.gen_test_labels", "modulename": "panelsplit.cross_validation", "qualname": "PanelSplit.gen_test_labels", "kind": "function", "doc": "<p>Generate testing set labels based on the provided labels.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>labels</strong> (pd.Index, pd.Series, pd.DataFrame, or np.ndarray):\nThe labels corresponding to the observations.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Same type as <code>labels</code></strong>: The labels for the testing set.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pandas</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">periods</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">periods</span><span class=\"p\">,</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">test_labels</span> <span class=\"o\">=</span> <span class=\"n\">ps</span><span class=\"o\">.</span><span class=\"n\">gen_test_labels</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">test_labels</span>\n<span class=\"go\">array([&#39;b&#39;, &#39;c&#39;], dtype=&#39;&lt;U1&#39;)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">indexes</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">Index</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">indexes</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">Index</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"fullname": "panelsplit.cross_validation.PanelSplit.gen_snapshots", "modulename": "panelsplit.cross_validation", "qualname": "PanelSplit.gen_snapshots", "kind": "function", "doc": "<p>Generate snapshots for each cross-validation split.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (pd.DataFrame):\nThe DataFrame from which snapshots are generated.</li>\n<li><strong>period_col</strong> (str, optional):\nThe column name (or index) in <code>data</code> to derive the snapshot period. If both an index\nand a column in <code>data</code> are named <code>period_col</code>, the index is used by default.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: A concatenated DataFrame containing snapshots for each split. Each snapshot includes\na 'split' column (indicating the split number) and, if <code>period_col</code> is provided, a\n'snapshot_period' column.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pandas</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span><span class=\"s1\">&#39;value&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">NA</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span><span class=\"s1\">&#39;period&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"s1\">&#39;Int32&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;period&#39;</span><span class=\"p\">],</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"n\">ps</span><span class=\"o\">.</span><span class=\"n\">gen_snapshots</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">period_col</span><span class=\"o\">=</span><span class=\"s1\">&#39;period&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">snapshots</span><span class=\"p\">)</span>\n<span class=\"go\">   value  period  split  snapshot_period</span>\n<span class=\"go\">0     10       1      0                2</span>\n<span class=\"go\">1   &lt;NA&gt;       2      0                2</span>\n<span class=\"go\">0     10       1      1                3</span>\n<span class=\"go\">1   &lt;NA&gt;       2      1                3</span>\n<span class=\"go\">2     30       3      1                3</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">period_col</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.cross_validation.drop_splits": {"fullname": "panelsplit.cross_validation.drop_splits", "modulename": "panelsplit.cross_validation", "qualname": "drop_splits", "kind": "function", "doc": "<p>Drop cross-validation splits if either the training or testing set is empty or contains only one unique value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cv</strong> (list):\nA list of tuples, where each tuple contains (train_indices, test_indices) as boolean arrays.\nThe object is expected to have an attribute <code>n_splits</code> (an integer) and support the <code>pop</code> method.</li>\n<li><strong>y</strong> (pd.Series):\nSeries of shape (n_samples,) containing target values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list</strong>: The modified list of splits with the problematic splits removed.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pandas</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span><span class=\"s1\">&#39;value&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">NA</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span><span class=\"s1\">&#39;period&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"s1\">&#39;Int32&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">periods</span><span class=\"p\">,</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">drop_splits</span><span class=\"p\">(</span><span class=\"n\">ps</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;value&#39;</span><span class=\"p\">])</span>\n<span class=\"go\">Dropping split 0 as either the test or train set is either empty or contains only one unique value.</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cv</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline": {"fullname": "panelsplit.pipeline", "modulename": "panelsplit.pipeline", "kind": "module", "doc": "<p></p>\n"}, "panelsplit.pipeline.SequentialCVPipeline": {"fullname": "panelsplit.pipeline.SequentialCVPipeline", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline", "kind": "class", "doc": "<p>A sequential pipeline that applies a series of transformers/estimators with\noptional cross-validation (CV).</p>\n\n<p>Each step is a tuple of (name, transformer, cv). If cv is provided, out-of-fold\noutputs are reassembled.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>steps</strong> (list of tuples):\nList where each tuple is (name, transformer, cv). 'name' is a string identifier,\n'transformer' is an estimator or transformer, and 'cv' is a cross-validation splitter\nor None.</li>\n<li><strong>verbose</strong> (bool, default=False):\nWhether to print verbose output during fitting and transformation.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>steps</strong> (list):\nThe list of pipeline steps.</li>\n<li><strong>verbose</strong> (bool):\nVerbosity flag.</li>\n<li><strong>fitted_steps_</strong> (dict):\nDictionary storing fitted transformers for each step.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">sklearn.preprocessing</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">StandardScaler</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">sklearn.linear_model</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">LogisticRegression</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">sklearn.model_selection</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">KFold</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pipeline</span> <span class=\"o\">=</span> <span class=\"n\">SequentialCVPipeline</span><span class=\"p\">([</span>\n<span class=\"gp\">... </span>    <span class=\"p\">(</span><span class=\"s1\">&#39;scaler&#39;</span><span class=\"p\">,</span> <span class=\"n\">StandardScaler</span><span class=\"p\">(),</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"p\">(</span><span class=\"s1\">&#39;classifier&#39;</span><span class=\"p\">,</span> <span class=\"n\">LogisticRegression</span><span class=\"p\">(),</span> <span class=\"kc\">None</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span><span class=\"p\">],</span> <span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">steps</span><span class=\"p\">)</span>\n<span class=\"go\">[(&#39;scaler&#39;, StandardScaler(), None), (&#39;classifier&#39;, LogisticRegression(), KFold(n_splits=3))]</span>\n</code></pre>\n</div>\n", "bases": "sklearn.base.BaseEstimator"}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.fit", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.fit", "kind": "function", "doc": "<p>Fit the entire pipeline to the data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or pandas.DataFrame or pandas.Series):\nInput data.</li>\n<li><strong>y</strong> (array-like, optional):\nTarget values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SequentialCVPipeline</strong>: The fitted pipeline instance.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">numpy</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">panelsplit.cross_validation</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">PanelSplit</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">sklearn.preprocessing</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">StandardScaler</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">sklearn.linear_model</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">LogisticRegression</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># For demonstration, we use a simple dataset</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">period</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps_1</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">period</span><span class=\"p\">,</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">include_first_train_in_test</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ps_2</span> <span class=\"o\">=</span> <span class=\"n\">PanelSplit</span><span class=\"p\">(</span><span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">period</span><span class=\"p\">,</span> <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pipeline</span> <span class=\"o\">=</span> <span class=\"n\">SequentialCVPipeline</span><span class=\"p\">([</span>\n<span class=\"gp\">... </span>    <span class=\"p\">(</span><span class=\"s1\">&#39;scaler&#39;</span><span class=\"p\">,</span> <span class=\"n\">StandardScaler</span><span class=\"p\">(),</span> <span class=\"n\">ps_1</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"p\">(</span><span class=\"s1\">&#39;classifier&#39;</span><span class=\"p\">,</span> <span class=\"n\">LogisticRegression</span><span class=\"p\">(),</span> <span class=\"n\">ps_2</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.transform", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.transform", "kind": "function", "doc": "<p>Transform the input data using the fitted pipeline.</p>\n\n<p>This method applies the transformation steps on the data,\nreturning the transformed output.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or pandas.DataFrame or pandas.Series):\nInput data.</li>\n<li><strong>y</strong> (array-like, optional):\nTarget values (used during fitting).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like or pandas.DataFrame or pandas.Series</strong>: Transformed output.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.fit_transform", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.fit_transform", "kind": "function", "doc": "<p>Fit the pipeline and transform the input data.</p>\n\n<p>This method fits the pipeline on the provided data and then applies the transformation steps,\nreturning the transformed output.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or pandas.DataFrame or pandas.Series):\nInput data.</li>\n<li><strong>y</strong> (array-like, optional):\nTarget values (used during fitting).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like or pandas.DataFrame or pandas.Series</strong>: Transformed output.</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>This method is dynamically injected based on the final estimator's capabilities.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.predict", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.predict", "kind": "function", "doc": "<p>Transform the data and predict the class.</p>\n\n<p>This method fits the pipeline on the provided data and then applies the final estimator's\npredict method to predict the class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or pandas.DataFrame or pandas.Series):\nInput data.</li>\n<li><strong>y</strong> (array-like, optional):\nTarget values (used during fitting).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like or pandas.DataFrame or pandas.Series</strong>: Predicted class.</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>This method is dynamically injected based on the final estimator's capabilities.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.fit_predict", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.fit_predict", "kind": "function", "doc": "<p>Fit the pipeline and predict target values.</p>\n\n<p>This method dynamically fits the pipeline on the provided data and then applies the final estimator's\n predict method to generate predictions.</p>\n\n<p>Parameters</p>\n\n<hr />\n\n<p>X : array-like or pandas.DataFrame or pandas.Series\n     Input data.\n y : array-like, optional\n     Target values (used during fitting).</p>\n\n<p>Returns</p>\n\n<hr />\n\n<p>array-like or pandas.DataFrame or pandas.Series\n     Predicted target values.</p>\n\n<p>Note</p>\n\n<hr />\n\n<p>This method is dynamically injected based on the final step of the pipeline.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.predict_proba", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities using the fitted pipeline.</p>\n\n<p>This method applies the final estimator's predict_proba method on the transformed data to predict class probabilities.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or pandas.DataFrame or pandas.Series):\nInput data.</li>\n<li><strong>y</strong> (array-like):\nTrue target values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Predicted class probability.</li>\n<li><strong>Note:</strong></li>\n<li><strong>-----</strong></li>\n<li><strong>This is a placeholder method for documentation purposes only.</strong></li>\n<li><strong>The actual method is dynamically generated based on the final estimator's capabilities.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.fit_predict_proba", "kind": "function", "doc": "<p>Fit the pipeline and predict class probabilities.</p>\n\n<p>This method fits the pipeline on the provided data and then applies the final estimator's\npredict_proba method to compute class probabilities.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or pandas.DataFrame or pandas.Series):\nInput data.</li>\n<li><strong>y</strong> (array-like, optional):\nTarget values (used during fitting).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like or pandas.DataFrame or pandas.Series</strong>: Predicted class probabilities.</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>This method is dynamically injected based on the final estimator's capabilities.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline.SequentialCVPipeline.score": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.score", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.score", "kind": "function", "doc": "<p>Compute the score.</p>\n\n<p>This method applies the final estimator's score method on the transformed data to compute a performance score.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or pandas.DataFrame or pandas.Series):\nInput data.</li>\n<li><strong>y</strong> (array-like):\nTrue target values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Computed performance score.</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>This method is dynamically injected based on the final estimator's capabilities.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"fullname": "panelsplit.pipeline.SequentialCVPipeline.fit_score", "modulename": "panelsplit.pipeline", "qualname": "SequentialCVPipeline.fit_score", "kind": "function", "doc": "<p>Fit the pipeline and compute the score.</p>\n\n<p>This method fits the pipeline on the provided data and then computes a performance score using the final estimator's\nscore method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or pandas.DataFrame or pandas.Series):\nInput data.</li>\n<li><strong>y</strong> (array-like, optional):\nTarget values (used during fitting and scoring).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Computed performance score.</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>This method is dynamically injected based on the final estimator's capabilities.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "panelsplit.plot": {"fullname": "panelsplit.plot", "modulename": "panelsplit.plot", "kind": "module", "doc": "<p></p>\n"}, "panelsplit.plot.plot_splits": {"fullname": "panelsplit.plot.plot_splits", "modulename": "panelsplit.plot", "qualname": "plot_splits", "kind": "function", "doc": "<p>Visualize time series cross-validation splits using a scatter plot.</p>\n\n<p>This function generates a scatter plot that displays training and test indices\nfor each cross-validation split contained in a PanelSplit instance. Each split\nis plotted on a separate horizontal line: blue markers represent training indices\nand red markers represent test indices.</p>\n\n<p>Parameters:\n    PanelSplit (object): An instance of PanelSplit containing the cross-validation\n        splits. It must have an attribute <code>u_periods_cv</code>, which should be an iterable\n        of tuples, each in the form (train_index, test_index). Here, both <code>train_index</code>\n        and <code>test_index</code> are array-like collections of period indices.\n    show (bool, optional): If True (default), the plot is immediately displayed\n        using <code>plt.show()</code>. If False, the function returns the matplotlib Figure and Axes\n        objects for further customization.</p>\n\n<p>Returns:\n    tuple or None:\n        - If show is False, returns a tuple (fig, ax) where fig is the matplotlib Figure\n          and ax is the Axes object.\n        - If show is True, the plot is displayed and the function returns None.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>from panelsplit.cross_validation import PanelSplit\n      import numpy as np\n      import matplotlib.pyplot as plt\n      periods = np.array([1,2,3,4,5,6])</p>\n      \n      <h1 id=\"create-a-panelsplit-instance-with-cross-validation-splits\">Create a PanelSplit instance with cross-validation splits</h1>\n      \n      <p>ps = PanelSplit(periods, n_splits = 3)</p>\n      \n      <h1 id=\"to-display-the-plot-immediately\">To display the plot immediately:</h1>\n      \n      <p>plot_splits(ps)</p>\n      \n      <h1 id=\"or-to-further-customize-the-plot-before-displaying\">Or, to further customize the plot before displaying:</h1>\n      \n      <p>fig, ax = plot_splits(ps, show=False)\n      ax.set_title(\"A custom plot of cross-validation splits\")\n      plt.show()</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">PanelSplit</span>, </span><span class=\"param\"><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"panelsplit": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 491}, "panelsplit.application": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "panelsplit.application.cross_val_fit": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 173, "bases": 0, "doc": 644}, "panelsplit.application.cross_val_predict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 227}, "panelsplit.application.cross_val_fit_predict": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 204, "bases": 0, "doc": 810}, "panelsplit.cross_validation": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "panelsplit.cross_validation.PanelSplit": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 341}, "panelsplit.cross_validation.PanelSplit.split": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 506}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 231}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 297}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 297}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 438}, "panelsplit.cross_validation.drop_splits": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 363}, "panelsplit.pipeline": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "panelsplit.pipeline.SequentialCVPipeline": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 371}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 574}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 88}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 112}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 114}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 105}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 126}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 116}, "panelsplit.pipeline.SequentialCVPipeline.score": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 97}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 110}, "panelsplit.plot": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "panelsplit.plot.plot_splits": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 296}}, "length": 26, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 7}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 6}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}}, "df": 1}, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}, "panelsplit.plot": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 26}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 11}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.plot": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 4}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 11}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 8}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 7}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}}, "df": 1}, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"1": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}, "3": {"9": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"panelsplit.application.cross_val_fit": {"tf": 11.74734012447073}, "panelsplit.application.cross_val_predict": {"tf": 9.486832980505138}, "panelsplit.application.cross_val_fit_predict": {"tf": 12.68857754044952}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 6.6332495807108}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 5.830951894845301}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 12.24744871391589}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 12.24744871391589}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 4.69041575982343}, "panelsplit.cross_validation.drop_splits": {"tf": 3.7416573867739413}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 4.69041575982343}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 3.7416573867739413}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 4.69041575982343}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 3.7416573867739413}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 4.69041575982343}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 3.7416573867739413}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 4.69041575982343}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 4.242640687119285}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 4.69041575982343}, "panelsplit.plot.plot_splits": {"tf": 4.242640687119285}}, "df": 19, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2, "s": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 14}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 2.449489742783178}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 2.449489742783178}}, "df": 5}}, "l": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}, "v": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 4}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 11}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2}, "panelsplit.application.cross_val_fit_predict": {"tf": 2}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 2}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 2}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 10}}}, "a": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 2}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}}, "df": 5}, "1": {"0": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 4}, "2": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}, "docs": {"panelsplit.application.cross_val_fit": {"tf": 2}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 2}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.8284271247461903}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2.6457513110645907}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 12}, "2": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2.449489742783178}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.6457513110645907}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2.23606797749979}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 11}, "3": {"0": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 2}, "9": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2.8284271247461903}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.8284271247461903}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 3.4641016151377544}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 3.4641016151377544}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 3.1622776601683795}, "panelsplit.cross_validation.drop_splits": {"tf": 2.8284271247461903}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2.8284271247461903}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2}}, "df": 8}, "docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.23606797749979}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 11}, "4": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 5}, "5": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 5}, "6": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 5}, "7": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}, "docs": {"panelsplit": {"tf": 12.36931687685298}, "panelsplit.application": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit": {"tf": 19.8997487421324}, "panelsplit.application.cross_val_predict": {"tf": 8.06225774829855}, "panelsplit.application.cross_val_fit_predict": {"tf": 20.8806130178211}, "panelsplit.cross_validation": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 9.38083151964686}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 17.916472867168917}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 12.649110640673518}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 13.820274961085254}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 13.820274961085254}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 16.06237840420901}, "panelsplit.cross_validation.drop_splits": {"tf": 14.696938456699069}, "panelsplit.pipeline": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 14.38749456993816}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 20.322401432901575}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 5.916079783099616}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 6.324555320336759}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 6.324555320336759}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 5.385164807134504}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 7.416198487095663}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 6.324555320336759}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 6.324555320336759}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 6.324555320336759}, "panelsplit.plot": {"tf": 1.7320508075688772}, "panelsplit.plot.plot_splits": {"tf": 7.416198487095663}}, "df": 26, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 3.1622776601683795}, "panelsplit.application.cross_val_fit": {"tf": 2.23606797749979}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2}, "panelsplit.plot.plot_splits": {"tf": 2.6457513110645907}}, "df": 12}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}}, "df": 17}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 21}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 2.23606797749979}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 4}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 9}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 2}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.7320508075688772}}, "df": 2}}}, "y": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}}, "df": 7, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3, "s": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 2}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.449489742783178}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 2}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.8284271247461903}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"panelsplit": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 3}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 1}}, "d": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2.449489742783178}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.23606797749979}, "panelsplit.cross_validation.drop_splits": {"tf": 2}}, "df": 10}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 3.3166247903554}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.7320508075688772}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 7, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 11}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2}, "panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 10}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit": {"tf": 2}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 2.6457513110645907}}, "df": 16, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 8, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {"panelsplit": {"tf": 3.605551275463989}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.7320508075688772}, "panelsplit.plot.plot_splits": {"tf": 2.449489742783178}}, "df": 13}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 6, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}}, "df": 8}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 2, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 2}}}}}}}}}, "x": {"docs": {"panelsplit.plot.plot_splits": {"tf": 2}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "o": {"docs": {"panelsplit": {"tf": 2.449489742783178}, "panelsplit.application.cross_val_fit": {"tf": 2}, "panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 17, "o": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 5}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 7}, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "e": {"docs": {"panelsplit": {"tf": 2.23606797749979}, "panelsplit.application.cross_val_fit": {"tf": 2.8284271247461903}, "panelsplit.application.cross_val_predict": {"tf": 3}, "panelsplit.application.cross_val_fit_predict": {"tf": 4}, "panelsplit.cross_validation.PanelSplit": {"tf": 3.7416573867739413}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.23606797749979}, "panelsplit.cross_validation.drop_splits": {"tf": 2.449489742783178}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 2.6457513110645907}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 2.6457513110645907}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 2.449489742783178}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 2.449489742783178}, "panelsplit.plot.plot_splits": {"tf": 3.3166247903554}}, "df": 22, "n": {"docs": {"panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 10}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 3}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 3.3166247903554}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 2}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 12}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 2}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 3.3166247903554}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 8, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}}, "df": 3, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2}}, "df": 3, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "d": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 2.8284271247461903}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 8}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 2}, "panelsplit.application.cross_val_fit": {"tf": 2.23606797749979}, "panelsplit.application.cross_val_predict": {"tf": 2}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.8284271247461903}, "panelsplit.cross_validation.PanelSplit": {"tf": 3}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 14, "m": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 3.1622776601683795}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.7320508075688772}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 7}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.449489742783178}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"panelsplit": {"tf": 3.1622776601683795}, "panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.449489742783178}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.23606797749979}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 16, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2}, "panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.8284271247461903}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 7}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 2, "s": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}}, "df": 4, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}}, "df": 2}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 2.23606797749979}, "panelsplit.application.cross_val_predict": {"tf": 2}, "panelsplit.application.cross_val_fit_predict": {"tf": 3}, "panelsplit.cross_validation.PanelSplit": {"tf": 3}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2.449489742783178}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 2.6457513110645907}}, "df": 17}, "n": {"docs": {"panelsplit": {"tf": 2}, "panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 2}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.6457513110645907}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 9, "t": {"3": {"2": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 6}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 12}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.7320508075688772}, "panelsplit.plot.plot_splits": {"tf": 2}}, "df": 5}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 2}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 2, "d": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}}, "df": 2}, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 4, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 3}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2}, "panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "f": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 2}}, "df": 7}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 2}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 20}}}}, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}}, "t": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 8, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 2}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 2}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.23606797749979}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 3}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 2.449489742783178}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 2}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 2.449489742783178}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 2.6457513110645907}}, "df": 14}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}}, "df": 2, "s": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 2}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2}}, "df": 3, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2.449489742783178}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"panelsplit.plot.plot_splits": {"tf": 2.449489742783178}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 2}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 2.6457513110645907}, "panelsplit.application.cross_val_fit": {"tf": 2.23606797749979}, "panelsplit.application.cross_val_predict": {"tf": 2}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.8284271247461903}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 2.449489742783178}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 4, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 3, "d": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 3}, "s": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1.7320508075688772}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 2}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.7320508075688772}}, "df": 5, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 7}}}}}}}}}}, "n": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}, "v": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2.23606797749979}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 6}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 2.6457513110645907}, "panelsplit.application.cross_val_fit": {"tf": 2}, "panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.6457513110645907}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 2.449489742783178}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 2}}, "df": 3, "s": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 10}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 2}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 6, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 2}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 2}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}}, "df": 2}}, "x": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.7320508075688772}}, "df": 12, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}}, "df": 3}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.7320508075688772}, "panelsplit.plot.plot_splits": {"tf": 1.7320508075688772}}, "df": 9}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 11}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 8}}}, "y": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"panelsplit": {"tf": 2.6457513110645907}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2.23606797749979}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 14, "o": {"docs": {}, "df": 0, "u": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 2}}, "df": 2, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 2}}, "df": 19}, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}}, "df": 1}, "v": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 21, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"panelsplit": {"tf": 2}, "panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 2.23606797749979}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.8284271247461903}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2.23606797749979}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 2}}, "df": 11}, "n": {"docs": {"panelsplit": {"tf": 2}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 12, "l": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}}, "df": 4}}, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.drop_splits": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 4}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 2}, "panelsplit.application.cross_val_predict": {"tf": 2}, "panelsplit.application.cross_val_fit_predict": {"tf": 2.23606797749979}, "panelsplit.cross_validation.PanelSplit": {"tf": 2.8284271247461903}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 16}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}}, "df": 2, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"panelsplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}, "t": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 4}, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 10}}}, "r": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"1": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 2}, "docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1, "p": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 3, "r": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}, "d": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 8}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 9}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.cross_validation.drop_splits": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 13, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 2}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 2}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 9}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 2}, "panelsplit.cross_validation.PanelSplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2}, "panelsplit.plot.plot_splits": {"tf": 1.4142135623730951}}, "df": 5}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 7, "s": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.drop_splits": {"tf": 1}}, "df": 4, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.7320508075688772}}, "df": 2, "d": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "e": {"docs": {"panelsplit.plot.plot_splits": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1.4142135623730951}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1.4142135623730951}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 12}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 2}, "panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1.4142135623730951}, "panelsplit.cross_validation.drop_splits": {"tf": 2}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 2}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 3}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit": {"tf": 1}}, "df": 1}}, "n": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"panelsplit": {"tf": 1}}, "df": 1, "s": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 3.3166247903554}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 3.3166247903554}}, "df": 3}}}}}, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1.4142135623730951}}, "df": 3}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.pipeline.SequentialCVPipeline": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}}, "g": {"docs": {"panelsplit": {"tf": 1}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}}, "df": 5, "s": {"docs": {"panelsplit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit": {"tf": 1}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.plot.plot_splits": {"tf": 1}}, "df": 5}, "d": {"docs": {"panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "t": {"docs": {"panelsplit.application.cross_val_fit_predict": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 5.744562646538029}, "panelsplit.application.cross_val_fit_predict": {"tf": 6}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 4.898979485566356}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 3.4641016151377544}, "panelsplit.cross_validation.PanelSplit.gen_train_labels": {"tf": 4.242640687119285}, "panelsplit.cross_validation.PanelSplit.gen_test_labels": {"tf": 4.242640687119285}, "panelsplit.cross_validation.PanelSplit.gen_snapshots": {"tf": 4.123105625617661}, "panelsplit.cross_validation.drop_splits": {"tf": 3.4641016151377544}, "panelsplit.pipeline.SequentialCVPipeline": {"tf": 3.872983346207417}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 6}}, "df": 10}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"panelsplit.application.cross_val_predict": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"panelsplit.cross_validation.PanelSplit": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.7320508075688772}, "panelsplit.application.cross_val_predict": {"tf": 1}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.7320508075688772}, "panelsplit.cross_validation.PanelSplit.split": {"tf": 1}, "panelsplit.cross_validation.PanelSplit.get_n_splits": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit": {"tf": 1.7320508075688772}, "panelsplit.pipeline.SequentialCVPipeline.transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_transform": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_predict_proba": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.score": {"tf": 1}, "panelsplit.pipeline.SequentialCVPipeline.fit_score": {"tf": 1}}, "df": 14}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"panelsplit.application.cross_val_fit": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_predict": {"tf": 1.4142135623730951}, "panelsplit.application.cross_val_fit_predict": {"tf": 1.4142135623730951}}, "df": 3}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"panelsplit.cross_validation.PanelSplit.split": {"tf": 2.8284271247461903}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();